<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>